<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>